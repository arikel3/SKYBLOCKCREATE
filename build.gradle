//file:noinspection GroovyAssignabilityCheck
//file:noinspection GroovyAccessibility
plugins {
    id "fabric-loom" version "0.12-SNAPSHOT"
    id "maven-publish"
    id "io.github.juuxel.loom-quiltflower" version "1.+" // Quiltflower, a better decompiler
    id "org.quiltmc.quilt-mappings-on-loom" version "4.2.+" // Quilt Mappings, for parameters and javadoc. Also hashed mojmap.
    id "io.github.p03w.machete" version "1.+" // automatic jar compressing on build
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

ext.buildNumber = System.getenv('GITHUB_RUN_NUMBER')

version = "mc${project.minecraft_version}_v${project.mod_version}" + (buildNumber != null ? "+${buildNumber}" : '')
group = project.maven_group
archivesBaseName = project.archives_base_name

repositories {
    mavenCentral()
    mavenLocal()
    maven { url = "https://api.modrinth.com/maven" }
    maven { url = "https://cursemaven.com" }
    maven { url = "https://maven.parchmentmc.org" }
    maven { url = "https://maven.fabricmc.net/" }
    maven { url = "https://maven.tterrag.com/" }
    maven { url = "https://storage.googleapis.com/devan-maven/" }
    maven { url = "https://maven.shedaniel.me/" }
    maven { url = "https://aperlambda.github.io/maven" }
    maven { url = "https://ladysnake.jfrog.io/artifactory/mods" }
    maven { url = "https://maven.kotlindiscord.com/repository/terraformers/" }
    maven { url = "https://mvn.devos.one/releases/" }
    maven { url = "https://mvn.devos.one/snapshots/" }
    maven { url = "https://maven.terraformersmc.com/" }
    maven { url = "https://maven.cafeteria.dev" }
    maven { url = "https://jitpack.io/" }
    maven { url = "https://maven.jamieswhiteshirt.com/libs-release" }
    maven { url = "https://maven.gegy.dev" }
}

dependencies {
    // dev env
    minecraft("com.mojang:minecraft:${project.minecraft_version}")
    mappings loom.layered {
        it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:1.18.2+build.22:v2")) // https://lambdaurora.dev/tools/import_quilt.html
        it.parchment("org.parchmentmc.data:parchment-1.18.2:BLEEDING-20220313.132143-1@zip") // https://ldtteam.jfrog.io/ui/native/parchmentmc-public/org/parchmentmc/data/parchment-1.18.1/BLEEDING-SNAPSHOT
        it.officialMojangMappings {
            setNameSyntheticMembers(false)
        }
    }
    modImplementation("net.fabricmc:fabric-loader:${project.loader_version}")
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") { exclude(group: "net.fabricmc.fabric-api") }
    modApi("me.shedaniel.cloth:basic-math:0.6.0")
    modImplementation("com.terraformersmc:modmenu:${project.modmenu_version}")
    modCompileOnly("me.shedaniel:RoughlyEnoughItems-api-fabric:${project.rei_version}") { transitive = false }
    modImplementation("me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}") { transitive = false }
    modImplementation("dev.architectury:architectury-fabric:${project.architectury_version}")
    modLocalRuntime("maven.modrinth:lazydfu:0.1.2")
    modLocalRuntime("maven.modrinth:lithium:mc1.18.2-0.7.9")
    modCompileOnly("maven.modrinth:sandwichable:1.2+1.18.2")

    // uncomment these to test

//    modLocalRuntime("maven.modrinth:sandwichable:1.2+1.18.2")
//    modLocalRuntime("maven.modrinth:mealapi:0.3+1.18")
//    modLocalRuntime("dev.lambdaurora:spruceui:3.3.1+1.17")

//    modRuntimeOnly("maven.modrinth:sodium:mc1.18.2-0.4.1")
//    runtimeOnly('org.joml:joml:1.10.4') // for sodium

//    modLocalRuntime("vazkii.botania:Botania:1.18.1-428-FABRIC-SNAPSHOT"
//    modLocalRuntime("curse.maven:nbt-crafting-314633:3707208") { transitive = false }
//    modLocalRuntime("curse.maven:alloygery-573592:3762142") { transitive = false }
//    modLocalRuntime("curse.maven:xl-packets-fabric-390168:3527187") { transitive = false }

    // dependencies
    modImplementation("net.fabricmc.fabric-api:fabric-api:${project.fabric_version}")

    modImplementation(include("io.github.fabricators_of_create:Porting-Lib:${project.port_lib_version}+${project.minecraft_version}-dev.${project.port_lib_hash}"))
    modImplementation(include("me.alphamode:ForgeTags:${project.forge_tags_version}"))
    modImplementation(include("com.electronwill.night-config:core:${project.night_config_core_version}"))
    modImplementation(include("com.electronwill.night-config:toml:${project.night_config_toml_version}"))
    modImplementation(include("curse.maven:forge-config-api-port-fabric-547434:${project.config_api_id}")) { transitive = false }
    modImplementation(include("com.tterrag.registrate:Registrate:${project.registrate_version}"))
    modImplementation(include("com.jozufozu.flywheel:Flywheel-Fabric:${project.flywheel_version}"))
    modImplementation(include("com.jamieswhiteshirt:reach-entity-attributes:${project.reach_entity_attributes_version}"))
    modImplementation(include("dev.cafeteria:fake-player-api:${project.fake_player_api_version}"))
    modImplementation(include("io.github.tropheusj:milk-lib:${project.milk_lib_version}"))
    modImplementation(include("me.luligabi:NoIndium:${project.no_indium_version}"))
    implementation(include("com.google.code.findbugs:jsr305:${project.jsr305_version}"))
}

task buildOrPublish {
    group = "build"
    String mavenUser = System.getenv().MAVEN_USER
    if (mavenUser != null && !mavenUser.isEmpty()) {
        dependsOn(tasks.getByName("publish"))
        println("prepared for publish")
    } else {
        dependsOn(tasks.getByName("build"))
        println("prepared for build")
    }
}

loom {
    accessWidenerPath = file("src/main/resources/create.accesswidener")
    sourceSets {
        main {
            resources {
                srcDir("src/generated/resources")
                exclude("src/generated/resources/.cache")
            }
        }
    }

    runs {
        datagen {
            client()

            name "Data Generation"
            vmArg "-Dfabric-api.datagen"
            vmArg "-Dfabric-api.datagen.output-dir=${file("src/generated/resources")}"
            vmArg "-Dfabric-api.datagen.modid=create"
            // from ae2
            property "com.simibubi.create.existingData", file("src/main/resources").absolutePath

            runDir "build/datagen"
        }
    }
}

processResources {
    Map<String, String> properties = new HashMap<>()
    properties.put("version", project.version)
    properties.put("loader_version", project.loader_version)
    properties.put("fabric_version", project.fabric_version)
    properties.put("minecraft_version", project.minecraft_version)
    properties.put("java_version", sourceCompatibility)
    properties.put("registrate_version", project.registrate_version)
    properties.put("flywheel_version", project.flywheel_version)
    properties.put("port_lib_version", "${project.port_lib_version}+${project.minecraft_version}.${project.port_lib_hash}")
    properties.put("forge_tags_version", project.forge_tags_version)
    properties.put("forge_config_api_port_version", project.forge_config_api_port_version)
    properties.put("reach_entity_attributes_version", project.reach_entity_attributes_version)
    properties.put("fake_player_api_version", project.fake_player_api_version)
    properties.put("milk_lib_version", project.milk_lib_version)
    properties.put("night_config_core_version", project.night_config_core_version)
    properties.put("night_config_toml_version", project.night_config_toml_version)

    properties.forEach((k, v) -> inputs.property(k, v))

    filesMatching("fabric.mod.json") {
        expand properties
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = Integer.parseInt(sourceCompatibility)
}

java {
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    repositories {
        maven {
            url = "https://mvn.devos.one/${System.getenv().PUBLISH_SUFFIX}/"
            credentials {
                username = System.getenv().MAVEN_USER
                password = System.getenv().MAVEN_PASS
            }
            authentication { basic(BasicAuthentication) }
        }
    }
}
